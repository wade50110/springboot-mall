<?xml version="1.0" encoding="utf-8" ?>
<configuration debug="true">
    <contextName>springBootMall</contextName>

    <!-- springProfile 就是限定執行環境是否吃設定檔 -->
    <springProfile name="dev, uat">
        <!-- property 設定變數 -->
        <property name="HOME_LOG" value="/data/logs/springBootMall"/>
        <!-- appender name為自訂義名稱  class為輸出策略-->
        <!-- 輸出策略: https://blog.csdn.net/gu19930914/article/details/124277553-->
        <appender name="INFO-FILE-ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- file 設定檔案輸出位置 -->
            <file>${HOME_LOG}/springBootMallInfo.log</file>

            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${HOME_LOG}/archived/springBootMallInfo.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
                <!-- each archived file, size max 10MB -->
                <maxFileSize>100MB</maxFileSize>
                <!-- total size of all archive files, if total size > 20GB, it will delete old archived file -->
                <totalSizeCap>20GB</totalSizeCap>
                <!-- 120 days to keep -->
                <maxHistory>120</maxHistory>
            </rollingPolicy>

            <!--
                此filter約束了當前appender: 只記錄INFO 其他級別不做紀錄
                onMatch和onMismatch都有三个属性值，分别为Accept、DENY和NEUTRAL
                onMatch="ACCEPT" 表示匹配该级别及以上
                onMatch="DENY" 表示不匹配该级别及以上
                onMatch="NEUTRAL" 表示该级别及以上的，由下一个filter处理，如果当前是最后一个，则表示匹配该级别及以上
                onMismatch="ACCEPT" 表示匹配该级别以下
                onMismatch="DENY" 表示不匹配该级别以下
                onMismatch="NEUTRAL" 表示该级别以下的，由下一个filter处理，如果当前是最后一个，则表示匹配该级别以下
            -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>info</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>

            <!-- pattern: https://logback.qos.ch/manual/layouts.html官方文件-->
            <!--%d：這是日期模式，用於在日誌中插入當前日期和時間。
                %p：這是優先級模式，用於在日誌中插入日誌事件的優先級，也就是日誌的級別，如INFO、DEBUG、WARN、ERROR等。
                %c{1}：這是類別模式，用於在日誌中插入產生該日誌事件的類別名稱。{1}表示只輸出類別名稱的最後一部分。
                [%t]：這是線程模式，用於在日誌中插入產生該日誌事件的線程名稱。
                %replace：這是替換模式，用於在日誌中替換匹配到的內容。這裡有兩個%replace，第一個%replace將匹配到的password(:|=)[.*?].*?替換為password=[XXX]，第二個%replace將匹配到的"password":.*?\s*?".*?"替換為"password": "XXX"。這兩個%replace主要是用於將日誌中的密碼信息替換為XXX，以避免敏感信息��輸出到日誌中。
                %n：這是換行模式，用於在日誌中插入一個換行符。
                %X{traceid} : 他會自動帶入MDC的traceid裡的Value-->
            <!-- 此設定輸出會長這樣  2024-06-05 16:11:00,302 ERROR c.e.j.c.SystemController [http-nio-8080-exec-1]  getVersion123 -->
            <encoder>
                <pattern>%d %p %c{1} [%t] %replace( %replace(%msg){"password(\:|\=)\[.*?\].*?", "password=[XXX]"} ){"\"password\"\:.*?\s*?\".*?\"", "\"password\"\: \"XXX\""}%n</pattern>
            </encoder>
        </appender>
        <appender name="ERROR-FILE-ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${HOME_LOG}/springBootMallError.log</file>

            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <fileNamePattern>${HOME_LOG}/archived/springBootMallError.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
                <!-- each archived file, size max 10MB -->
                <maxFileSize>100MB</maxFileSize>
                <!-- total size of all archive files, if total size > 20GB, it will delete old archived file -->
                <totalSizeCap>20GB</totalSizeCap>
                <!-- 120 days to keep -->
                <maxHistory>120</maxHistory>
            </rollingPolicy>

            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>error</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>

            <encoder>
                <pattern>%d %p %c{1} [%t] %replace( %replace(%msg){"password(\:|\=)\[.*?\].*?", "password=[XXX]"} ){"\"password\"\:.*?\s*?\".*?\"", "\"password\"\: \"XXX\""}%n</pattern>
            </encoder>
        </appender>
    </springProfile>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger{36}.%M - %replace( %replace(%msg){"password(\:|\=)\[.*?\].*?", "password=[XXX]"} ){"\"password\"\:.*?\s*?\".*?\"", "\"password\"\: \"XXX\""}%n</pattern>
        </encoder>
    </appender>

    <springProfile name="dev">
        <root level="info">
            <appender-ref ref="STDOUT" />
            <!--             <appender-ref ref="FILE-ROLLING" />-->
        </root>
    </springProfile>

    <springProfile name="uat">
        <root level="info">
            <appender-ref ref="INFO-FILE-ROLLING" />
            <appender-ref ref="ERROR-FILE-ROLLING" />
        </root>
        <!--
            logger:对单个包或类添加配置
            name:用来指定受此loger约束的某一个包或者具体的某一个类。
            addtivity:是否向上级loger传递打印信息。默认是true。
            level:这意味着 "debug" 级别及以上的日志消息（如 "info", "warn", "error"）将被记录
        -->
        <logger name="org.apache.http" level="debug" additivity="false">
            <appender-ref ref="INFO-FILE-ROLLING"/>
        </logger>
    </springProfile>

</configuration>